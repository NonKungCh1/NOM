name: Secure RDP Runner

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: self-hosted
    timeout-minutes: 0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download RDP Config
        uses: actions/download-artifact@v4
        with:
          name: rdp-config
          path: ./rdp-config

      - name: Read RDP Config
        id: read-config
        run: |
          $rdp = Get-Content ./rdp-config/rdp.json | ConvertFrom-Json
          echo "USERNAME=$($rdp.username)" >> $env:GITHUB_ENV
          echo "PASSWORD=$($rdp.password)" >> $env:GITHUB_ENV

      - name: Configure RDP + Firewall + User
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          $securePass = ConvertTo-SecureString $env:PASSWORD -AsPlainText -Force
          if (-not (Get-LocalUser -Name $env:USERNAME)) {
              New-LocalUser -Name $env:USERNAME -Password $securePass -AccountNeverExpires
              Add-LocalGroupMember -Group "Administrators" -Member $env:USERNAME
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $env:USERNAME
          }

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Connect Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=rdp-selfhosted
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) { Write-Error "Tailscale IP not assigned"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Show RDP Info
        run: |
          Write-Host "=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: $env:USERNAME"
          Write-Host "Password: $env:PASSWORD"
          Write-Host "=================="

      - name: Maintain Connection
        run: |
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C to terminate"
              Start-Sleep -Seconds 300
          }
